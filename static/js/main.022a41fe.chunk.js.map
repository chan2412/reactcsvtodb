{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","App","state","dat","ri","message","ll","vari","a","console","log","post","then","res","data","setState","f","length","hh","b","mmo","x","ii","dd","tt","push","ff","handleOnDrop","xm","i","m","om","j","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","view","onDrop","this","onError","addRemoveButton","onRemoveFile","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAIAA,IAAMC,SAASC,QAAQ,yB,IAEFC,E,4MACnBC,MAAQ,CACNC,IAAK,GACLC,GAAG,EACHC,QAAQ,K,EAEXC,G,uCAAI,WAAOC,GAAP,SAAAC,EAAA,6DAEDC,QAAQC,IAAIH,GAFX,SAGUT,IAAMa,KAAK,OAAQJ,GAAMK,MAAK,SAAAC,GAEvC,GADAJ,QAAQC,IAAIG,GACK,SAAbA,EAAIC,KACLL,QAAQC,IAAI,gBAChB,EAAKK,SAAS,CAACV,QAAQ,4DAGpB,CAACI,QAAQC,IAAI,YACf,IAAIM,EAAET,EAAKU,OAAO,EAAKf,MAAME,GAC7B,EAAKW,SAAS,CAACX,GAAGY,IAClB,EAAKD,SAAS,CAACV,QAAQW,EAAG,uBAb3B,yD,wDAiBHE,GAAK,WACH,IACIC,EADE,EAAKjB,MAAMC,IACTc,OACJG,EAAI,EACJC,EAAEF,EAAE,IACRV,QAAQC,IAAIW,GACb,IAAI,IAAIC,EAAG,EAAEA,EAAGH,EAAEE,EAAEC,GAAI,IAAM,CAEjC,IADI,IAAIC,EAAG,GACHC,EAAG,EAAEA,EAAG,IAAMA,IACtBD,EAAGE,KAAK,EAAKvB,MAAMC,IAAIiB,IACvBA,IAEA,EAAKd,GAAGiB,GAeR,IAAIG,EAAG,GACP,IAAIF,EAAG,EAAEA,EAAGH,EAAEG,IACbE,EAAGD,KAAK,EAAKvB,MAAMC,IAAIiB,IACtBA,IAGF,EAAKd,GAAGoB,I,EAcNC,aAAe,SAAAb,GACbL,QAAQC,IAAI,+BACZD,QAAQC,IAAII,GAIZ,IAHA,IAAIO,EAAI,EAAKnB,MAAMC,IACfe,EAAK,GACLF,EAAIF,EAAK,GAAGA,KACPc,EAAK,EAAGA,EAAKZ,EAAEC,OAAQW,IAC9BV,EAAGO,KAAKT,EAAEY,IAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAKG,OAAQY,IAAK,CAGpC,IAFA,IAAIC,EAAIhB,EAAKe,GAAGf,KACZiB,EAAK,GACAC,EAAI,EAAGA,EAAIF,EAAEb,OAAQe,IAC5BD,EAAGb,EAAGc,IAAMF,EAAEE,GAEhBX,EAAEI,KAAKM,GAET,EAAKhB,SAAS,CAAEZ,IAAKkB,IACrBZ,QAAQC,IAAI,gC,EAGduB,cAAgB,SAACC,EAAKC,EAAMC,EAAWC,GACrC5B,QAAQC,IAAIwB,I,EAGdI,mBAAqB,SAAAxB,GACnBL,QAAQC,IAAI,+BACZD,QAAQC,IAAII,GACZL,QAAQC,IAAI,gC,EAEd6B,KAAO,WACL9B,QAAQC,IAAI,EAAKR,MAAMC,KACvB,EAAKe,M,4CAEP,WACE,OACE,qCACE,uDACA,cAAC,IAAD,CACEsB,OAAQC,KAAKd,aACbe,QAASD,KAAKR,cACdU,iBAAe,EACfC,aAAcH,KAAKH,mBAJrB,SAME,4EAEF,wBAAQO,QAASJ,KAAKF,KAAtB,kBACA,6BAAKE,KAAKvC,MAAMG,iB,GArHSyC,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.022a41fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport './App.css';\nimport axios from 'axios';\naxios.defaults.baseURL=\"http://localhost:5000/\";\n\nexport default class App extends Component {\n  state = {\n    dat: [],\n    ri:0,\n    message:\"0\"\n  };\n ll= async (vari)=>\n  { \n    console.log(vari);\n   let m=await axios.post('/Add', vari).then(res => {\n      console.log(res);\n      if (res.data === 'nins')\n       { console.log('Not Inserted');\n     this.setState({message:\"There is some problem occured refresh and try again\"});\n   }\n      else \n        {console.log('Inserted');\n      var f=vari.length+this.state.ri;\n      this.setState({ri:f});\n      this.setState({message:f +\" Rows Inserted\"});\n    }\n    });\n  }\n  hh = () => {\n    var t=this.state.dat;\n    var b=t.length;\n    var mmo=0;\n    var x=b%10000;\n    console.log(x);\n   for(var ii=0;ii<b-x;ii+=10000){\n    var dd=[];\nfor(var tt=0;tt<10000;tt++){\ndd.push(this.state.dat[mmo]);\nmmo++;\n}\nthis.ll(dd);\n/*axios.post('/Add', this.state.dat).then(res => {\n      console.log(res);\n      if (res.data === 'nins')\n       { alert('Not Inserted');\n     this.setState({message:\"There is some problem occured refresh and try again\"});\n   }\n      else \n        {alert('Inserted');\n      var f=this.state.dat.length;\n      this.setState({message:f +\" Rows Inserted\"});\n    }\n    });*/\n\n}\nvar ff=[]\nfor(tt=0;tt<x;tt++)\n{ff.push(this.state.dat[mmo]);\n  mmo++;\n\n}\nthis.ll(ff);\n /**   axios.post('/Add', this.state.dat).then(res => {\n      console.log(res);\n      if (res.data === 'nins')\n       { alert('Not Inserted');\n     this.setState({message:\"There is some problem occured refresh and try again\"});\n   }\n      else \n        {alert('Inserted');\n      var f=this.state.dat.length;\n      this.setState({message:f +\" Rows Inserted\"});\n    }\n    });*/\n  };\n  handleOnDrop = data => {\n    console.log('---------------------------');\n    console.log(data);\n    var x = this.state.dat;\n    var hh = [];\n    var f = data[0].data;\n    for (var xm = 0; xm < f.length; xm++) {\n      hh.push(f[xm]);\n    }\n    for (var i = 1; i < data.length; i++) {\n      var m = data[i].data;\n      var om = {};\n      for (var j = 0; j < m.length; j++) {\n        om[hh[j]] = m[j];\n      }\n      x.push(om);\n    }\n    this.setState({ dat: x });\n    console.log('---------------------------');\n  };\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };ll\n  view = () => {\n    console.log(this.state.dat);\n    this.hh();\n  };\n  render() {\n    return (\n      <>\n        <h5>Click and Drag Upload</h5>\n        <CSVReader\n          onDrop={this.handleOnDrop}\n          onError={this.handleOnError}\n          addRemoveButton\n          onRemoveFile={this.handleOnRemoveFile}\n        >\n          <span>Drop CSV file here or click to upload.</span>\n        </CSVReader>\n        <button onClick={this.view}>Show</button>\n        <h3>{this.state.message}</h3>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}